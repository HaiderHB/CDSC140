name: Cross-Platform Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: scripts

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m venv venv
          venv\Scripts\pip install --upgrade pip
          venv\Scripts\pip install -r requirements.txt

      - name: Obfuscate with PyArmor
        run: |
          venv\Scripts\pyarmor gen --output dist-obf transcription.py

      - name: Build executable with PyInstaller
        run: |
          venv\Scripts\pyinstaller transcription_windows.spec

      - name: Copy built exe to Electron build folder
        run: |
          mkdir ..\build\transcription
          copy dist\transcription.exe ..\build\transcription\transcription.exe

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Build Electron app (Windows)
        run: |
          npm run build:win

      - name: Upload Windows Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.exe
            dist/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: scripts

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Obfuscate with PyArmor
        run: |
          source venv/bin/activate
          pyarmor gen --output dist-obf transcription.py

      - name: Build executable with PyInstaller
        run: |
          source venv/bin/activate
          pyinstaller transcription_mac.spec

      - name: Copy built binary to Electron build folder
        run: |
          mkdir -p ../build/transcription
          cp dist/transcription ../build/transcription/transcription

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Build Electron app (macOS)
        run: |
          npm run build:mac

      - name: Upload macOS Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.dmg
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
